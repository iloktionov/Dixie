<Window x:Class="Dixie.Presentation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Zoom="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
        xmlns:Dixie="clr-namespace:Dixie.Presentation"
        xmlns:oxy="http://oxyplot.codeplex.com"
        Title="Dixie" 
        MinHeight="400"
        MinWidth="600"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/TopologyGraphTemplates.xaml" />
                <ResourceDictionary Source="Resources/ProgressBarTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Dixie:InitialStateDescriptionConverter x:Key="stateLabelConverter" />
            <Dixie:TaskStateColorConverter x:Key="taskColorConverter" />
            <Dixie:TasksStateDescriptionConverter x:Key="taskDescriptionConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="3*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="7*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>

        <Zoom:ZoomControl Grid.Row="0" Grid.Column="0" BorderThickness="1" BorderBrush="Black">
            <Dixie:DixieGraphLayout
                x:Name = "topologyGraphLayout"
                Graph="{Binding Path=TopologyGraph}"
                LayoutAlgorithmType="EfficientSugiyama"
                OverlapRemovalAlgorithmType="FSA"
                AllowDrop="False"
            >
            </Dixie:DixieGraphLayout>
        </Zoom:ZoomControl>

        <oxy:Plot Grid.Row="1" Grid.Column="0" Model="{Binding PlotModel}" Name="resultsPlot" AutoAdjustPlotMargins="true" BorderThickness="1" BorderBrush="Black"/>

        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="8*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <GroupBox Header="Initial state"  Grid.Row="0" Grid.Column="0">
                <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TextBox Name="initialStateLabel" Width="100" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Text="{Binding HasInitialState, Converter={StaticResource stateLabelConverter}}" IsReadOnly="True" TextChanged="InitialStateTextChanged"></TextBox>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Button Name="generateStateButton" Grid.Column="0" Margin="3, 0" Click="GenerateState">Generate</Button>
                        <Button Name="loadStateButton" Grid.Column="1" Click="ReadStateFromFile">Load from file</Button>
                    </Grid>
                </DockPanel>
            </GroupBox>

            <GroupBox Header="Test settings"  Grid.Row="1" Grid.Column="0">
                <StackPanel Orientation="Vertical">
                    <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <ListBox Name="availableAlgorithmsBox" ItemsSource="{Binding AvailableAlgorithms, Mode=OneWay}" Height="150" Margin="5" SelectionMode="Extended"></ListBox>
                        <StackPanel Orientation="Vertical" Margin="5">
                            <Button Name="selectAlgorithmButton" Height="50" Margin="0,10" Click="SelectAlgorithmButtonClick">Add &gt;&gt;</Button>
                            <Button Name="removeAlgorithmButton" Height="50" Margin="0,10" Click="RemoveAlgorithmButtonClick">&lt;&lt; Remove</Button>
                        </StackPanel>
                        <ListBox Name="selectedAlgorithmsBox" Height="150" Margin="5" SelectionMode="Single" Background="LightCoral"></ListBox>
                    </DockPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>Test duration:</Label>
                        <TextBox Name="durationInput" TextChanged="DurationInputTextChanged">15s</TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>Results check period:</Label>
                        <TextBox Name="checkPeriodInput" TextChanged="CheckPeriodInputTextChanged">100ms</TextBox>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Test flow"  Grid.Row="2" Grid.Column="0">
                <DockPanel  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8*"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Button Name="startTestButton" Grid.Row="0" Grid.Column="0" Click="StartTest">Start test</Button>
                        <Button Name="stopTestButton" Grid.Row="0" Grid.Column="1" Click="StopTest" IsEnabled="False">Stop test</Button>
                        <Button Name="resetButton" Grid.Row="0" Grid.Column="2" Click="ResetModel">Reset model</Button>
                        <ProgressBar Name="testProgressBar" Grid.Row="1" Grid.ColumnSpan="3"></ProgressBar>
                    </Grid>
                </DockPanel >
            </GroupBox>
        </Grid>

        <ItemsControl Name="taskStatesControl" ItemsSource="{Binding TaskStates, Mode=OneWay}" Grid.Row="0" Grid.Column="1" Margin="5" BorderThickness="1" BorderBrush="Gray">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button 
                        Content="{Binding Converter={StaticResource taskDescriptionConverter}}" 
                        Background="{Binding Status, Converter={StaticResource taskColorConverter}}"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window>
